<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKManagedObjectStore.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKManagedObjectStore</TokenIdentifier>
			<Abstract type="html">The RKManagedObjectStore class encapsulates a Core Data stack including a managed object model, a persistent store coordinator, and a set of managed object contexts. The managed object store simplifies the task of properly setting up a Core Data stack and provides some additional functionality, such as the use of a seed database to initialize a SQLite backed persistent store and a simple code path for resetting the store by destroying and recreating the persistent stores.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>
			
			<NodeRef refid="20"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKManagedObjectStore/defaultStore</TokenIdentifier>
			<Abstract type="html">Returns the default managed object store for the application.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)defaultStore</Declaration>
			
			<ReturnValue><Abstract type="html">The default managed object store.</Abstract></ReturnValue>
			<Anchor>//api/name/defaultStore</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKManagedObjectStore/setDefaultStore:</TokenIdentifier>
			<Abstract type="html">Sets the default managed object store for the application.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>+ (void)setDefaultStore:(RKManagedObjectStore *)managedObjectStore</Declaration>
			<Parameters>
				<Parameter>
					<Name>managedObjectStore</Name>
					<Abstract type="html">The new default managed object store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultStore:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/initWithManagedObjectModel:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a given managed object model. This is the designated initializer for RKManagedObjectStore.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (id)initWithManagedObjectModel:(NSManagedObjectModel *)managedObjectModel</Declaration>
			<Parameters>
				<Parameter>
					<Name>managedObjectModel</Name>
					<Abstract type="html">The managed object model with which to initialize the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given managed object model.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithManagedObjectModel:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/initWithPersistentStoreCoordinator:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with an existing persistent store coordinator.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (id)initWithPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)persistentStoreCoordinator</Declaration>
			<Parameters>
				<Parameter>
					<Name>persistentStoreCoordinator</Name>
					<Abstract type="html">The persistent store coordinator with which to initialize the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the managed object model of the given persistent store coordinator and the persistent store coordinator.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithPersistentStoreCoordinator:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/init</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a managed object model obtained by merging the models from all of the application&apos;s non-framework bundles.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/createPersistentStoreCoordinator</TokenIdentifier>
			<Abstract type="html">Creates a persistent store coordinator with the receiver&apos;s managed object model. After invocation, the persistentStoreCoordinator property will no longer be nil.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (void)createPersistentStoreCoordinator</Declaration>
			
			
			<Anchor>//api/name/createPersistentStoreCoordinator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/addInMemoryPersistentStore:</TokenIdentifier>
			<Abstract type="html">Adds a new in memory persistent store to the persistent store coordinator of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (NSPersistentStore *)addInMemoryPersistentStore:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">On input, a pointer to an error object. If an error occurs, this pointer is set to an actual error object containing the error information. You may specify nil for this parameter if you do not want the error information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The new persistent store, or nil in the event of an error.</Abstract></ReturnValue>
			<Anchor>//api/name/addInMemoryPersistentStore:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:</TokenIdentifier>
			<Abstract type="html">Adds a new SQLite persistent store, optionally initialized with a seed database, to the persistent store coordinator of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (NSPersistentStore *)addSQLitePersistentStoreAtPath:(NSString *)storePath fromSeedDatabaseAtPath:(NSString *)seedPath withConfiguration:(NSString *)nilOrConfigurationName options:(NSDictionary *)nilOrOptions error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>storePath</Name>
					<Abstract type="html">The path at which to save the persistent store on disk.</Abstract>
				</Parameter><Parameter>
					<Name>seedPath</Name>
					<Abstract type="html">An optional path to a seed database to copy to the given storePath in the event that a store does not yet exist.</Abstract>
				</Parameter><Parameter>
					<Name>nilOrConfigurationName</Name>
					<Abstract type="html">An optional name of a Core Data configuration in the managed object model.</Abstract>
				</Parameter><Parameter>
					<Name>nilOrOptions</Name>
					<Abstract type="html">An optional dictionary of options with which to configure the persistent store. If nil, a dictionary of options enabling NSMigratePersistentStoresAutomaticallyOption and NSInferMappingModelAutomaticallyOption will be used.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">On input, a pointer to an error object. If an error occurs, this pointer is set to an actual error object containing the error information. You may specify nil for this parameter if you do not want the error information.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/resetPersistentStores:</TokenIdentifier>
			<Abstract type="html">Resets the persistent stores in the receiver&apos;s persistent store coordinator and recreates them. If a store being reset is backed by a file on disk (such as a SQLite file), the file will be removed prior to recreating the store. If the store was originally created using a seed database, the seed will be recopied to reset the store to its seeded state. If the managed object model uses External Storage for any of its entities, then the external storage directory will be recursively deleted when the store is reset.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (BOOL)resetPersistentStores:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">On input, a pointer to an error object. If an error occurs, this pointer is set to an actual error object containing the error information. You may specify nil for this parameter if you do not want the error information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A Boolean value indicating if the reset was successful.</Abstract></ReturnValue>
			<Anchor>//api/name/resetPersistentStores:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setManagedObjectModel:</TokenIdentifier>
			<Abstract type="html">Returns the managed object model of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectModel *managedObjectModel</Declaration>
			
			<ReturnValue><Abstract type="html">The managed object model of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/managedObjectModel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/managedObjectModel</TokenIdentifier>
			<Abstract type="html">Returns the managed object model of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectModel *managedObjectModel</Declaration>
			
			<ReturnValue><Abstract type="html">The managed object model of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/managedObjectModel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setPersistentStoreCoordinator:</TokenIdentifier>
			<Abstract type="html">Returns the persistent store coordinator of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSPersistentStoreCoordinator *persistentStoreCoordinator</Declaration>
			
			<ReturnValue><Abstract type="html">The persistent store coordinator of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/persistentStoreCoordinator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/persistentStoreCoordinator</TokenIdentifier>
			<Abstract type="html">Returns the persistent store coordinator of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSPersistentStoreCoordinator *persistentStoreCoordinator</Declaration>
			
			<ReturnValue><Abstract type="html">The persistent store coordinator of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/persistentStoreCoordinator</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setManagedObjectCache:</TokenIdentifier>
			<Abstract type="html">The managed object cache associated with the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) id&lt;RKManagedObjectCaching&gt; managedObjectCache</Declaration>
			
			
			<Anchor>//api/name/managedObjectCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/managedObjectCache</TokenIdentifier>
			<Abstract type="html">The managed object cache associated with the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) id&lt;RKManagedObjectCaching&gt; managedObjectCache</Declaration>
			
			
			<Anchor>//api/name/managedObjectCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/createManagedObjectContexts</TokenIdentifier>
			<Abstract type="html">Creates the persistent store and main queue managed object contexts for the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (void)createManagedObjectContexts</Declaration>
			
			
			<Anchor>//api/name/createManagedObjectContexts</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setPersistentStoreManagedObjectContext:</TokenIdentifier>
			<Abstract type="html">Returns the managed object context of the receiver that is associated with the persistent store coordinator and is responsible for managing persistence.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *persistentStoreManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/persistentStoreManagedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/persistentStoreManagedObjectContext</TokenIdentifier>
			<Abstract type="html">Returns the managed object context of the receiver that is associated with the persistent store coordinator and is responsible for managing persistence.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *persistentStoreManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/persistentStoreManagedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setMainQueueManagedObjectContext:</TokenIdentifier>
			<Abstract type="html">The main queue managed object context of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *mainQueueManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/mainQueueManagedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/mainQueueManagedObjectContext</TokenIdentifier>
			<Abstract type="html">The main queue managed object context of the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *mainQueueManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/mainQueueManagedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/newChildManagedObjectContextWithConcurrencyType:</TokenIdentifier>
			<Abstract type="html">Creates a new child managed object context of the persistent store managed object context with a given concurrency type.</Abstract>
			<DeclaredIn>RKManagedObjectStore.h</DeclaredIn>			
			
			<Declaration>- (NSManagedObjectContext *)newChildManagedObjectContextWithConcurrencyType:(NSManagedObjectContextConcurrencyType)concurrencyType</Declaration>
			<Parameters>
				<Parameter>
					<Name>concurrencyType</Name>
					<Abstract type="html">The desired concurrency type for the new context.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A newly created managed object context with the given concurrency type whose parent is the persistentStoreManagedObjectContext.</Abstract></ReturnValue>
			<Anchor>//api/name/newChildManagedObjectContextWithConcurrencyType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/addSearchIndexingToEntityForName:onAttributes:</TokenIdentifier>
			<Abstract type="html">Adds search indexing to the entity for the given name in the receiver&apos;s managed object model.</Abstract>
			<DeclaredIn>RKManagedObjectStore+RKSearchAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)addSearchIndexingToEntityForName:(NSString *)entityName onAttributes:(NSArray *)attributes</Declaration>
			<Parameters>
				<Parameter>
					<Name>entityName</Name>
					<Abstract type="html">The name of the entity in the receiver&apos;s managed object model that should be made searchable.</Abstract>
				</Parameter><Parameter>
					<Name>attributes</Name>
					<Abstract type="html">An array of NSAttributeDescription objects or NSString attribute names specifying the NSStringAttributeType attributes that are to be indexed for searching.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addSearchIndexingToEntityForName:onAttributes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/setSearchIndexer:</TokenIdentifier>
			<Abstract type="html">The search indexer for the receiver&apos;s primary managed object context.</Abstract>
			<DeclaredIn>RKManagedObjectStore+RKSearchAdditions.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RKSearchIndexer *searchIndexer</Declaration>
			
			
			<Anchor>//api/name/searchIndexer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectStore/searchIndexer</TokenIdentifier>
			<Abstract type="html">The search indexer for the receiver&apos;s primary managed object context.</Abstract>
			<DeclaredIn>RKManagedObjectStore+RKSearchAdditions.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RKSearchIndexer *searchIndexer</Declaration>
			
			
			<Anchor>//api/name/searchIndexer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/startIndexingPersistentStoreManagedObjectContext</TokenIdentifier>
			<Abstract type="html">Tells the search indexer to begin observing the persistent store managed object context for changes to searchable entities and updating the search words.</Abstract>
			<DeclaredIn>RKManagedObjectStore+RKSearchAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)startIndexingPersistentStoreManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/startIndexingPersistentStoreManagedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectStore/stopIndexingPersistentStoreManagedObjectContext</TokenIdentifier>
			<Abstract type="html">Tells the search indexer to stop observing the persistent store managed object context for changes to searchable entities.</Abstract>
			<DeclaredIn>RKManagedObjectStore+RKSearchAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)stopIndexingPersistentStoreManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/stopIndexingPersistentStoreManagedObjectContext</Anchor>
		</Token>
		
	</File>
</Tokens>