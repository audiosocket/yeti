<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKPropertyInspector.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKPropertyInspector</TokenIdentifier>
			<Abstract type="html">The RKPropertyInspector class provides an interface for introspecting the properties and attributes of classes using the reflection capabilities of the Objective-C runtime. Once inspected, the properties inspection details are cached.</Abstract>
			<DeclaredIn>RKPropertyInspector.h</DeclaredIn>
			
			<NodeRef refid="36"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKPropertyInspector/sharedInspector</TokenIdentifier>
			<Abstract type="html">Returns the shared property inspector singleton instance.</Abstract>
			<DeclaredIn>RKPropertyInspector.h</DeclaredIn>			
			
			<Declaration>+ (RKPropertyInspector *)sharedInspector</Declaration>
			
			<ReturnValue><Abstract type="html">The shared RKPropertyInspector instance.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInspector</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKPropertyInspector/propertyInspectionForClass:</TokenIdentifier>
			<Abstract type="html">Returns a dictionary keyed by property name that includes the key-value coding class of the property and a Boolean indicating if the property is backed by a primitive (non-object) value. The dictionary for each property includes details about the key-value coding class representing the property and if the property is backed by a primitive type.</Abstract>
			<DeclaredIn>RKPropertyInspector.h</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)propertyInspectionForClass:(Class)objectClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectClass</Name>
					<Abstract type="html">The class to inspect the properties of.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A dictionary keyed by property name that includes details about all declared properties of the class.</Abstract></ReturnValue>
			<Anchor>//api/name/propertyInspectionForClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKPropertyInspector/classForPropertyNamed:ofClass:isPrimitive:</TokenIdentifier>
			<Abstract type="html">Returns the Class object specifying the type of the property with given name on a class.</Abstract>
			<DeclaredIn>RKPropertyInspector.h</DeclaredIn>			
			
			<Declaration>- (Class)classForPropertyNamed:(NSString *)propertyName ofClass:(Class)objectClass isPrimitive:(BOOL *)isPrimitive</Declaration>
			<Parameters>
				<Parameter>
					<Name>propertyName</Name>
					<Abstract type="html">The name of the property to retrieve the type of.</Abstract>
				</Parameter><Parameter>
					<Name>objectClass</Name>
					<Abstract type="html">The class to retrieve the property from.</Abstract>
				</Parameter><Parameter>
					<Name>isPrimitive</Name>
					<Abstract type="html">A pointer to a Boolean value to set indicating if the specified property is of a primitive (non-object) type.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A Class object specifying the type of the requested property.</Abstract></ReturnValue>
			<Anchor>//api/name/classForPropertyNamed:ofClass:isPrimitive:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKPropertyInspector/propertyInspectionForEntity:</TokenIdentifier>
			<Abstract type="html">Returns a dictionary wherein the keys are the names of attribute and relationship properties and the values are the class used to represent the corresponding property for a given entity.</Abstract>
			<DeclaredIn>RKPropertyInspector+CoreData.h</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)propertyInspectionForEntity:(NSEntityDescription *)entity</Declaration>
			<Parameters>
				<Parameter>
					<Name>entity</Name>
					<Abstract type="html">The entity to retrieve the properties names and classes of.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A dictionary containing the names and classes of the given entity.</Abstract></ReturnValue>
			<Anchor>//api/name/propertyInspectionForEntity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKPropertyInspector/classForPropertyNamed:ofEntity:</TokenIdentifier>
			<Abstract type="html">Returns the class used to represent the property with the given name on the given entity.</Abstract>
			<DeclaredIn>RKPropertyInspector+CoreData.h</DeclaredIn>			
			
			<Declaration>- (Class)classForPropertyNamed:(NSString *)propertyName ofEntity:(NSEntityDescription *)entity</Declaration>
			<Parameters>
				<Parameter>
					<Name>propertyName</Name>
					<Abstract type="html">The name of the property to retrieve the class for.</Abstract>
				</Parameter><Parameter>
					<Name>entity</Name>
					<Abstract type="html">The entity containing the property to retrieve the class for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The class used to represent the property.</Abstract></ReturnValue>
			<Anchor>//api/name/classForPropertyNamed:ofEntity:</Anchor>
		</Token>
		
	</File>
</Tokens>