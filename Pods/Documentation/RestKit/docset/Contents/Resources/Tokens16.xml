<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKManagedObjectImporter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKManagedObjectImporter</TokenIdentifier>
			<Abstract type="html">Instances of RKManagedObjectImporter perform bulk imports of managed objects into a persistent store from
source files (typically in JSON or XML format) using object mappings. The importer provides functionality
for updating an existing persistent store or creating a seed database that can be used to bootstrap a new
persistent store with an initial data set.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/RKMIMETypeSerialization</TokenIdentifier>
		
	</RelatedTokens>
	
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/initWithManagedObjectModel:storePath:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a given managed object model and a path at which a SQLite persistent store
should be created to persist imported managed objects.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>- (id)initWithManagedObjectModel:(NSManagedObjectModel *)managedObjectModel storePath:(NSString *)storePath</Declaration>
			<Parameters>
				<Parameter>
					<Name>managedObjectModel</Name>
					<Abstract type="html">A Core Data manage object model with which to initialize the receiver.</Abstract>
				</Parameter><Parameter>
					<Name>storePath</Name>
					<Abstract type="html">The path at which to create a SQLite persistent store to persist the imported managed objects.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given managed object model and a complete Core Data persistence
    stack with a SQLite persistent store at the given store path.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithManagedObjectModel:storePath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/initWithPersistentStore:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a given persistent store in which to persist imported managed objects.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>- (id)initWithPersistentStore:(NSPersistentStore *)persistentStore</Declaration>
			<Parameters>
				<Parameter>
					<Name>persistentStore</Name>
					<Abstract type="html">A Core Data persistent store with which to initialize the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given persistent store. The persistent store coordinator and
    managed object model are determined from the given persistent store and a new managed object context with
    the private queue concurrency type is constructed.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithPersistentStore:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/setResetsStoreBeforeImporting:</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether existing managed objects in the persistent store should
be deleted before import.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL resetsStoreBeforeImporting</Declaration>
			
			
			<Anchor>//api/name/resetsStoreBeforeImporting</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectImporter/resetsStoreBeforeImporting</TokenIdentifier>
			<Abstract type="html">A Boolean value indicating whether existing managed objects in the persistent store should
be deleted before import.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BOOL resetsStoreBeforeImporting</Declaration>
			
			
			<Anchor>//api/name/resetsStoreBeforeImporting</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/setPersistentStore:</TokenIdentifier>
			<Abstract type="html">The persistent store in which imported managed objects will be persisted.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSPersistentStore *persistentStore</Declaration>
			
			
			<Anchor>//api/name/persistentStore</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectImporter/persistentStore</TokenIdentifier>
			<Abstract type="html">The persistent store in which imported managed objects will be persisted.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSPersistentStore *persistentStore</Declaration>
			
			
			<Anchor>//api/name/persistentStore</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/setManagedObjectModel:</TokenIdentifier>
			<Abstract type="html">The managed object model containing entities that may be imported by the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectModel *managedObjectModel</Declaration>
			
			
			<Anchor>//api/name/managedObjectModel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectImporter/managedObjectModel</TokenIdentifier>
			<Abstract type="html">The managed object model containing entities that may be imported by the receiver.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectModel *managedObjectModel</Declaration>
			
			
			<Anchor>//api/name/managedObjectModel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/setManagedObjectContext:</TokenIdentifier>
			<Abstract type="html">A managed object context with the NSPrivateQueueConcurrencyType concurrency type
used to perform the import.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *managedObjectContext</Declaration>
			
			
			<Anchor>//api/name/managedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectImporter/managedObjectContext</TokenIdentifier>
			<Abstract type="html">A managed object context with the NSPrivateQueueConcurrencyType concurrency type
used to perform the import.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSManagedObjectContext *managedObjectContext</Declaration>
			
			
			<Anchor>//api/name/managedObjectContext</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/setStorePath:</TokenIdentifier>
			<Abstract type="html">A convenience accessor for retrieving the complete filesystem path to the persistent
store in which the receiver will persist imported managed objects.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *storePath</Declaration>
			
			
			<Anchor>//api/name/storePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKManagedObjectImporter/storePath</TokenIdentifier>
			<Abstract type="html">A convenience accessor for retrieving the complete filesystem path to the persistent
store in which the receiver will persist imported managed objects.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *storePath</Declaration>
			
			
			<Anchor>//api/name/storePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/importObjectsFromItemAtPath:withMapping:keyPath:error:</TokenIdentifier>
			<Abstract type="html">Imports managed objects from the file or directory at the given path.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>- (NSUInteger)importObjectsFromItemAtPath:(NSString *)path withMapping:(RKMapping *)mapping keyPath:(NSString *)keyPath error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to the file or directory you wish to import. This parameter must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>mapping</Name>
					<Abstract type="html">The entity or dynamic mapping you wish to use for importing content at the given path.</Abstract>
				</Parameter><Parameter>
					<Name>keyPath</Name>
					<Abstract type="html">An optional key path to be evaluated against the results of parsing the content read at the given path. If the
    mappable content is not contained in a nesting attribute, the key path should be specified as nil.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">On input, a pointer to an error object. If an error occurs, this pointer is set to an actual error object containing
    the error information. You may specify nil for this parameter if you do not want the error information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A count of the number of managed object imported from the given path or NSNotFound if an error occurred during import.</Abstract></ReturnValue>
			<Anchor>//api/name/importObjectsFromItemAtPath:withMapping:keyPath:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/finishImporting:</TokenIdentifier>
			<Abstract type="html">Finishes the import process by saving the managed object context to the persistent store, ensuring all
imported managed objects are written to disk.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>- (BOOL)finishImporting:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">On input, a pointer to an error object. If an error occurs, this pointer is set to an actual error object containing
the error information. You may specify nil for this parameter if you do not want the error information.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the save to the persistent store was successful, else NO.</Abstract></ReturnValue>
			<Anchor>//api/name/finishImporting:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKManagedObjectImporter/logSeedingInfo</TokenIdentifier>
			<Abstract type="html">Logs information about where on the filesystem to access the SQLite database for the persistent
store in which the imported managed objects were persisted.</Abstract>
			<DeclaredIn>RKManagedObjectImporter.h</DeclaredIn>			
			
			<Declaration>- (void)logSeedingInfo</Declaration>
			
			
			<Anchor>//api/name/logSeedingInfo</Anchor>
		</Token>
		
	</File>
</Tokens>