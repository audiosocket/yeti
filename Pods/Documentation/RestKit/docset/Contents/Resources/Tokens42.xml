<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKResponseDescriptor.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKResponseDescriptor</TokenIdentifier>
			<Abstract type="html">An RKResponseDescriptor object describes an object mapping configuration that is applicable to an HTTP response. Response descriptors are defined by specifying the RKMapping object that is to be used when performing object mapping on the deserialized response body and the URL path pattern, key path, and status codes for which the mapping is appropriate. The path pattern is a SOCKit SOCPattern string that will be matched against the URL of the request that loaded the response being mapped. If the path pattern is nil, the response descriptor is considered to be appropriate for a response loaded from any URL. The key path specifies the location of data within the deserialized response body for which the mapping is appropriate. If nil, the mapping is considered to apply to the entire response body.  The status codes specify a set of HTTP response status codes for which the mapping is appropriate. It is common to constrain a response descriptor to the HTTP Successful status code class (status codes in the 200-299 range). Object mapping for error responses can be configured by configuring a response descriptor to handle the Client Error status code class (status codes in the 400-499 range). Instances of RKResponseDescriptor are immutable.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/RKPathMatcher</TokenIdentifier>
		
	</RelatedTokens>
	
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RKResponseDescriptor/responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new RKResponseDescriptor object.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)responseDescriptorWithMapping:(RKMapping *)mapping pathPattern:(NSString *)pathPattern keyPath:(NSString *)keyPath statusCodes:(NSIndexSet *)statusCodes</Declaration>
			<Parameters>
				<Parameter>
					<Name>mapping</Name>
					<Abstract type="html">The mapping for the response descriptor.</Abstract>
				</Parameter><Parameter>
					<Name>pathPattern</Name>
					<Abstract type="html">A path pattern that matches against URLs for which the mapping should be used.</Abstract>
				</Parameter><Parameter>
					<Name>keyPath</Name>
					<Abstract type="html">A key path specifying the subset of the parsed response for which the mapping is to be used.</Abstract>
				</Parameter><Parameter>
					<Name>statusCodes</Name>
					<Abstract type="html">A set of HTTP status codes for which the mapping is to be used.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new RKResponseDescriptor object.</Abstract></ReturnValue>
			<Anchor>//api/name/responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/setMapping:</TokenIdentifier>
			<Abstract type="html">The mapping to be used when object mapping the deserialized HTTP response body. Cannot be nil.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKMapping *mapping</Declaration>
			
			
			<Anchor>//api/name/mapping</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKResponseDescriptor/mapping</TokenIdentifier>
			<Abstract type="html">The mapping to be used when object mapping the deserialized HTTP response body. Cannot be nil.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKMapping *mapping</Declaration>
			
			
			<Anchor>//api/name/mapping</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/setPathPattern:</TokenIdentifier>
			<Abstract type="html">The path pattern to match against the request URL. If nil, the response descriptor matches any URL.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *pathPattern</Declaration>
			
			
			<Anchor>//api/name/pathPattern</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKResponseDescriptor/pathPattern</TokenIdentifier>
			<Abstract type="html">The path pattern to match against the request URL. If nil, the response descriptor matches any URL.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *pathPattern</Declaration>
			
			
			<Anchor>//api/name/pathPattern</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/setKeyPath:</TokenIdentifier>
			<Abstract type="html">The key path to match against the deserialized response body. If nil, the response descriptor matches the entire response body.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *keyPath</Declaration>
			
			
			<Anchor>//api/name/keyPath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKResponseDescriptor/keyPath</TokenIdentifier>
			<Abstract type="html">The key path to match against the deserialized response body. If nil, the response descriptor matches the entire response body.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSString *keyPath</Declaration>
			
			
			<Anchor>//api/name/keyPath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/setStatusCodes:</TokenIdentifier>
			<Abstract type="html">The set of status codes for which response descriptor matches. If nil, the the response descriptor matches any status code.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSIndexSet *statusCodes</Declaration>
			
			
			<Anchor>//api/name/statusCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKResponseDescriptor/statusCodes</TokenIdentifier>
			<Abstract type="html">The set of status codes for which response descriptor matches. If nil, the the response descriptor matches any status code.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy, readonly) NSIndexSet *statusCodes</Declaration>
			
			
			<Anchor>//api/name/statusCodes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/setBaseURL:</TokenIdentifier>
			<Abstract type="html">The base URL that the pathPattern is to be evaluated relative to.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSURL *baseURL</Declaration>
			
			
			<Anchor>//api/name/baseURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKResponseDescriptor/baseURL</TokenIdentifier>
			<Abstract type="html">The base URL that the pathPattern is to be evaluated relative to.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSURL *baseURL</Declaration>
			
			
			<Anchor>//api/name/baseURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/matchesPath:</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value that indicates if the receiver&apos;s path pattern matches the given path.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matchesPath:(NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">The path to compare with the path pattern of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the path matches the receiver&apos;s pattern, else NO.</Abstract></ReturnValue>
			<Anchor>//api/name/matchesPath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/matchesURL:</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value that indicates if the given URL object matches the base URL and path pattern of the receiver.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matchesURL:(NSURL *)URL</Declaration>
			<Parameters>
				<Parameter>
					<Name>URL</Name>
					<Abstract type="html">The URL to compare with the base URL and path pattern of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the URL matches the base URL and path pattern of the receiver, else NO.</Abstract></ReturnValue>
			<Anchor>//api/name/matchesURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKResponseDescriptor/matchesResponse:</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value that indicates if the given URL response object matches the receiver.</Abstract>
			<DeclaredIn>RKResponseDescriptor.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matchesResponse:(NSHTTPURLResponse *)response</Declaration>
			<Parameters>
				<Parameter>
					<Name>response</Name>
					<Abstract type="html">The HTTP response object to compare with the base URL, path pattern, and status codes set of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the response matches the base URL, path pattern, and status codes set of the receiver, else NO.</Abstract></ReturnValue>
			<Anchor>//api/name/matchesResponse:</Anchor>
		</Token>
		
	</File>
</Tokens>