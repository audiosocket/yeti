<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKRouteSet.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKRouteSet</TokenIdentifier>
			<Abstract type="html">The RKRouteSet class provides for the storage and retrieval of RKRoute objects. Route objects are added and removed the route set to manipulate the routing table of the application.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>
			
			<NodeRef refid="45"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/addRoute:</TokenIdentifier>
			<Abstract type="html">Adds a route to the receiver.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (void)addRoute:(RKRoute *)route</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The route to be added.
@raises NSInvalidArgumentException Raised if the route already exists in the receiver or overlaps an existing name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addRoute:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/removeRoute:</TokenIdentifier>
			<Abstract type="html">Removes a route from the receiver.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (void)removeRoute:(RKRoute *)route</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The route to be removed.
@raises NSInvalidArgumentException Raised if the route does not exist in the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeRoute:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/containsRoute:</TokenIdentifier>
			<Abstract type="html">Determines if a given route exists within the receiver.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (BOOL)containsRoute:(RKRoute *)route</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The route to be tested for containement.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the route is contained within the route set, else NO.</Abstract></ReturnValue>
			<Anchor>//api/name/containsRoute:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/allRoutes</TokenIdentifier>
			<Abstract type="html">Returns all routes from the receiver in an array.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)allRoutes</Declaration>
			
			<ReturnValue><Abstract type="html">An array containing all the routes in the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/allRoutes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/namedRoutes</TokenIdentifier>
			<Abstract type="html">Returns all named routes from the receiver in an array.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)namedRoutes</Declaration>
			
			<ReturnValue><Abstract type="html">An array containing all the named routes in the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/namedRoutes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/classRoutes</TokenIdentifier>
			<Abstract type="html">Returns all class routes from the receiver in an array.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)classRoutes</Declaration>
			
			<ReturnValue><Abstract type="html">An array containing all the class routes in the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/classRoutes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/relationshipRoutes</TokenIdentifier>
			<Abstract type="html">Returns all relationship routes from the receiver in an array.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)relationshipRoutes</Declaration>
			
			<ReturnValue><Abstract type="html">An array containing all the relationship routes in the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/relationshipRoutes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routeForName:</TokenIdentifier>
			<Abstract type="html">Retrieves a route with the given name.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (RKRoute *)routeForName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the named route to be found.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A route with the given name or nil if none was found.</Abstract></ReturnValue>
			<Anchor>//api/name/routeForName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routeForClass:method:</TokenIdentifier>
			<Abstract type="html">Retrieves a route for the given object class and request method.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (RKRoute *)routeForClass:(Class)objectClass method:(RKRequestMethod)method</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectClass</Name>
					<Abstract type="html">The object class of the route to be retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>method</Name>
					<Abstract type="html">The request method of the route to be retrieved.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A route with the given object class and method or nil if none was found.</Abstract></ReturnValue>
			<Anchor>//api/name/routeForClass:method:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routeForRelationship:ofClass:method:</TokenIdentifier>
			<Abstract type="html">Retrieves a route for a given relationship of a class with a given request method.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (RKRoute *)routeForRelationship:(NSString *)relationship ofClass:(Class)objectClass method:(RKRequestMethod)method</Declaration>
			<Parameters>
				<Parameter>
					<Name>relationship</Name>
					<Abstract type="html">The name of the relationship of the route to be retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>method</Name>
					<Abstract type="html">The request method of the route to be retrieved.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A route with the given relationship name, object class and method or nil if none was found.</Abstract></ReturnValue>
			<Anchor>//api/name/routeForRelationship:ofClass:method:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routesForClass:</TokenIdentifier>
			<Abstract type="html">Retrieves all class routes with a given object class.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)routesForClass:(Class)objectClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectClass</Name>
					<Abstract type="html">The object class of the routes to be retrieved.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing all class routes with the given class.</Abstract></ReturnValue>
			<Anchor>//api/name/routesForClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routesForObject:</TokenIdentifier>
			<Abstract type="html">Retrieves all object routes for a given object.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)routesForObject:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">An object for which all object routes are to be retrieved.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing all object routes where the target class is included in the given object&apos;s class hierarchy.</Abstract></ReturnValue>
			<Anchor>//api/name/routesForObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routesForRelationship:ofClass:</TokenIdentifier>
			<Abstract type="html">Retrieves all routes for a given relationship name and object class.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (NSArray *)routesForRelationship:(NSString *)relationshipName ofClass:(Class)objectClass</Declaration>
			<Parameters>
				<Parameter>
					<Name>relationshipName</Name>
					<Abstract type="html">The name of the relationship of the routes to be retrieved.</Abstract>
				</Parameter><Parameter>
					<Name>objectClass</Name>
					<Abstract type="html">The object class of the routes to be retrieved.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing all relationship routes with the given relationship name and object class.</Abstract></ReturnValue>
			<Anchor>//api/name/routesForRelationship:ofClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouteSet/routeForObject:method:</TokenIdentifier>
			<Abstract type="html">Retrieves a route for a given object and request method.</Abstract>
			<DeclaredIn>RKRouteSet.h</DeclaredIn>			
			
			<Declaration>- (RKRoute *)routeForObject:(id)object method:(RKRequestMethod)method</Declaration>
			
			
			<Anchor>//api/name/routeForObject:method:</Anchor>
		</Token>
		
	</File>
</Tokens>