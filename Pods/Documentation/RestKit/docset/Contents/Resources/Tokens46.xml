<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKRouter.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKRouter</TokenIdentifier>
			<Abstract type="html">An RKRouter instance is responsible for generating NSURL objects with a given base URL and a route set. It is used to centralize the knowledge about the URL&apos;s that are used by the application.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>
			
			<NodeRef refid="46"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/initWithBaseURL:</TokenIdentifier>
			<Abstract type="html">Initializes a router with a given base URL.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>- (id)initWithBaseURL:(NSURL *)baseURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>baseURL</Name>
					<Abstract type="html">The base URL with which to initialize the receiver.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with the given base URL.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithBaseURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/URLForRouteNamed:method:object:</TokenIdentifier>
			<Abstract type="html">Generates a URL for the route with the given name.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>- (NSURL *)URLForRouteNamed:(NSString *)routeName method:(out RKRequestMethod *)method object:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>routeName</Name>
					<Abstract type="html">The name of the route for which a URL is to be generated.</Abstract>
				</Parameter><Parameter>
					<Name>method</Name>
					<Abstract type="html">A pointer to an RKRequestMethod variable in which to store the HTTP method associated with the named route. May be nil.</Abstract>
				</Parameter><Parameter>
					<Name>object</Name>
					<Abstract type="html">An optional object against which to interpolate the path pattern.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new NSURL object constructed by appending the path pattern to the baseURL of the receiver and interpolating against a given object; or nil if no route was found with the given name.</Abstract></ReturnValue>
			<Anchor>//api/name/URLForRouteNamed:method:object:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/URLForObject:method:</TokenIdentifier>
			<Abstract type="html">Generates a URL for a given object and HTTP method.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>- (NSURL *)URLForObject:(id)object method:(RKRequestMethod)method</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The object for which a URL is to be generated.</Abstract>
				</Parameter><Parameter>
					<Name>method</Name>
					<Abstract type="html">The HTTP method for which the URL is to be generated.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new URL object constructed by appending the path pattern of the route for the object an HTTP method to the baseURL of the receiver, interpolated against the routed object; or nil if no route was found for the given object and HTTP method.</Abstract></ReturnValue>
			<Anchor>//api/name/URLForObject:method:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/URLForRelationship:ofObject:method:</TokenIdentifier>
			<Abstract type="html">Generates a URL for a relationship of a given object with a given HTTP method.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>- (NSURL *)URLForRelationship:(NSString *)relationshipName ofObject:(id)object method:(RKRequestMethod)method</Declaration>
			<Parameters>
				<Parameter>
					<Name>relationshipName</Name>
					<Abstract type="html">The name of the relationship for which a URL is to be generated.</Abstract>
				</Parameter><Parameter>
					<Name>object</Name>
					<Abstract type="html">The object for which the URL is to be generated.</Abstract>
				</Parameter><Parameter>
					<Name>method</Name>
					<Abstract type="html">The HTTP method for which the URL is to be generated.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new URL object constructed by appending the path pattern of the route for the given object&apos;s relationship and HTTP method to the baseURL of the receiver, interpolated against the routed object; or nil if no route was found for the given relationship, object and HTTP method.</Abstract></ReturnValue>
			<Anchor>//api/name/URLForRelationship:ofObject:method:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/URLWithRoute:object:</TokenIdentifier>
			<Abstract type="html">Generates a URL with a given route and object.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>- (NSURL *)URLWithRoute:(RKRoute *)route object:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>route</Name>
					<Abstract type="html">The route to generate the URL with.</Abstract>
				</Parameter><Parameter>
					<Name>object</Name>
					<Abstract type="html">The object with which to interpolate the path pattern of the given route.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new URL object constructed by interpolating the path pattern of the given route with the given object to construct a path and constructing an NSURL object relative to the baseURL of the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/URLWithRoute:object:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/setBaseURL:</TokenIdentifier>
			<Abstract type="html">The base URL that all URLs constructed by the receiver are relative to.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) NSURL *baseURL</Declaration>
			
			
			<Anchor>//api/name/baseURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKRouter/baseURL</TokenIdentifier>
			<Abstract type="html">The base URL that all URLs constructed by the receiver are relative to.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) NSURL *baseURL</Declaration>
			
			
			<Anchor>//api/name/baseURL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKRouter/setRouteSet:</TokenIdentifier>
			<Abstract type="html">A route set defining all the routes addressable through the receiver.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKRouteSet *routeSet</Declaration>
			
			
			<Anchor>//api/name/routeSet</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKRouter/routeSet</TokenIdentifier>
			<Abstract type="html">A route set defining all the routes addressable through the receiver.</Abstract>
			<DeclaredIn>RKRouter.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readonly) RKRouteSet *routeSet</Declaration>
			
			
			<Anchor>//api/name/routeSet</Anchor>
		</Token>
		
	</File>
</Tokens>